package main

import (
	"fmt"
	"net/http"
	"os"

	"levpay/controllers"
	_ "levpay/docs" // docs is generated by Swag CLI, you have to import it.

	"github.com/gorilla/mux"
	httpSwagger "github.com/swaggo/http-swagger"
)

// @title Supers API
// @version 1.0
// @description This is a sample serice for managing super heroes and villains
// @termsOfService http://swagger.io/terms/
// @contact.name API Support
// @contact.email axel_nomore@hotmail.com
// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html
// @host localhost:8484
// @BasePath /

func main() {

	router := mux.NewRouter()

	// Read-all
	router.HandleFunc("/api/supers", controllers.GetSupers).Methods("GET")

	// Read for ID
	router.HandleFunc("/api/supers/{id}", controllers.GetSuper).Methods("GET")

	// Read-all type
	router.HandleFunc("/api/supers/type/{type}", controllers.GetSupersType).Methods("GET")

	// Read for Name
	router.HandleFunc("/api/supers/name/{name}", controllers.GetNameSuper).Methods("GET")

	// Create
	router.HandleFunc("/api/supers", controllers.CreateSuper).Methods("POST")

	// Update
	router.HandleFunc("/api/supers/{id}", controllers.UpdateSuper).Methods("PUT")

	// Delete
	router.HandleFunc("/api/supers/{id}", controllers.DeleteSuper).Methods("DELETE")

	// Swagger
	router.PathPrefix("/swagger").Handler(httpSwagger.WrapHandler)

	port := os.Getenv("PORT")
	if port == "" {
		port = "8000"
	}

	fmt.Println(port)
	//Launch the app, visit localhost:8000/api/heroes
	err := http.ListenAndServe(":"+port, router)
	if err != nil {
		fmt.Print(err)
	}
}
